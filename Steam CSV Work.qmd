---
title: "Steam CSV Work"
author: "Andrew"
format: html
editor: visual
---


```{r setup, include=FALSE}
library(RSelenium)
library(jsonlite)
library(stringr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(tidyquant)
library(readr)
```

```{r}

cases <- c(
  "Chroma Case", "Chroma 2 Case", "Gamma Case","Glove Case","Dreams & Nightmares Case"
)

case_skins <- list(
  "Chroma Case" = c(
    "Glock-18 | Catacombs (Minimal Wear)",           # pistol
    "AK-47 | Cartel (Minimal Wear)",                 # rifle
    "AWP | Man-o'-war (Minimal Wear)"                # AWP
  ),
  "Chroma 2 Case" = c(
    "USP-S | Torque (Minimal Wear)",                 # pistol
    "M4A1-S | Hyper Beast (Minimal Wear)",           # rifle
    "AWP | Worm God (Minimal Wear)"                  # AWP
  ),
  "Gamma Case" = c(
    "Glock-18 | Wasteland Rebel (Minimal Wear)",     # pistol
    "M4A4 | Desolate Space (Minimal Wear)",          # rifle
    "AWP | Phobos (Minimal Wear)"                    # AWP-preferred random
  ),
  "Glove Case" = c(
    "USP-S | Cyrex (Minimal Wear)",                  # pistol
    "M4A4 | Buzz Kill (Minimal Wear)",               # rifle
    "P90 | Shallow Grave (Minimal Wear)"             # random
  ),
  "Dreams & Nightmares Case" = c(
    "USP-S | Ticket to Hell (Minimal Wear)",         # pistol
    "AK-47 | Nightwish (Minimal Wear)",              # rifle
    "MP9 | Starlight Protector (Minimal Wear)"       # random
  )
)

# Optinal Additional Cases
casesfinal <- c(
  "Chroma Case", "Chroma 2 Case", "Falchion Case", "Shadow Case",
  "Revolver Case", "Operation Wildfire Case", "Chroma 3 Case",
  "Gamma Case", "Gamma 2 Case", "Glove Case", "Spectrum Case",
  "Operation Hydra Case", "Spectrum 2 Case", "Clutch Case", 
  "Horizon Case", "Danger Zone Case", "Prisma Case", "CS20 Case", 
  "Shattered Web Case", "Prisma 2 Case", "Fracture Case", 
  "Operation Broken Fang Case", "Snakebite Case", 
  "Operation Riptide Case", "Dreams & Nightmares Case", 
  "Recoil Case", "Revolution Case", "Kilowatt Case", "Gallery Case"
  
)


```

```{r}
library(readr)

url_skins <- "https://raw.githubusercontent.com/AndrewPettifor25/FIN_450_Steam_Final/refs/heads/main/steam_skins_raw.csv?token=GHSAT0AAAAAAC76LQ4MJRCAELCMZQHGZUFKZ7UNG6A"
steam_skins_raw <- read_csv(url_skins)

url_cases <- "https://raw.githubusercontent.com/AndrewPettifor25/FIN_450_Steam_Final/refs/heads/main/steam_cases_raw.csv?token=GHSAT0AAAAAAC76LQ4N7GRPMWMTF5Q6EANYZ7UNJNA"
steam_cases_raw <- read_csv(url_cases)

```

```{r}
# Combine the case and skin data
# Note: We need to modify the skin data to match the structure before combining
all_skins_data_for_combine <- all_skins_data %>%
  rename(Item = Skin) %>%
  select(Case, Item, Item_Type, date, price_usd, volume)

all_cases_data_for_combine <- all_cases_data %>%
  mutate(Item = Case) %>%
  select(Case, Item, Item_Type, date, price_usd, volume)

# Combine both datasets
all_items_data <- bind_rows(all_cases_data_for_combine, all_skins_data_for_combine)

# Data Refining for all items
all_items_data_clean <- all_items_data %>% 
  mutate(date = as.POSIXct(date, tz = "UTC"))

# Daily history for all items
daily_item_closes <- all_items_data_clean %>%
  mutate(
    hour = hour(date),
    day = as.Date(date)
  ) %>%
  filter(hour == 1) %>%  # Keep only rows with time == 1:00
  group_by(Case, Item, Item_Type, day) %>%  # In case multiple entries at 1:00
  slice_max(order_by = date, n = 1) %>%
  ungroup() %>%
  select(Case, Item, Item_Type, date, price_usd, volume) %>%
  arrange(Case, Item, date)

# Past month data for all items
past_month_items <- all_items_data_clean %>%
  filter(date >= Sys.Date() - months(1)) %>%
  group_by(Case, Item, Item_Type) %>%
  arrange(date) %>%
  slice(-1) %>%  # removes the first row of each group
  ungroup()

#Exchange Rates TidyQuant Ticker: "CAD=X"
```

```{r}
fx_usdcad <- tq_get("CAD=X", get = "stock.prices", from = "2010-01-01")

fx_usdcad_clean <- fx_usdcad %>%
  select(date, fx_rate = close)

fx_usdcad_filled <- fx_usdcad_clean %>%
  complete(date = seq.Date(min(date), max(date), by = "day")) %>%
  fill(fx_rate, .direction = "down")

```

```{r}
# Convert to CAD
CAD_Converted_Items <- all_items_data_clean %>%
  mutate(date_only = as.Date(date)) %>%
  left_join(fx_usdcad_filled, by = c("date_only" = "date")) %>%
  mutate(price_cad = price_usd * fx_rate) %>% 
  drop_na()

CAD_Selected_Items <- CAD_Converted_Items %>% 
  select(Case, Item, Item_Type, date, price_cad, volume)
```

```{r}
# Daily history (CAD) for all items
Daily_CAD_Items <- CAD_Selected_Items %>%
  mutate(
    hour = hour(date),
    day = as.Date(date)
  ) %>%
  filter(hour == 1) %>%  # Keep only rows with time == 1:00
  group_by(Case, Item, Item_Type, day) %>%  # In case multiple entries at 1:00
  slice_max(order_by = date, n = 1) %>%
  ungroup() %>%
  select(Case, Item, Item_Type, date, price_cad, volume) %>%
  arrange(Case, Item, date)
```

```{r}

# Past month data (CAD) for all items
Month_CAD_Items <- CAD_Selected_Items %>%
  filter(date >= Sys.Date() - months(1)) %>%
  group_by(Case, Item, Item_Type) %>%
  arrange(date) %>%
  slice(-1) %>%  # removes the first row of each group
  ungroup()
```

```{r}
# Example visualization code - comparing cases and their skins
# For each case in case_skins, plot the case price and its skin prices
plot_case_and_skins <- function(case_name) {
  case_data <- Month_CAD_Items %>% 
    filter(Case == case_name)
  
  ggplot(case_data, aes(x = date, y = price_cad, color = Item, linetype = Item_Type)) +
    geom_line() +
    labs(title = paste("Price Comparison:", case_name, "and its Skins (CAD)"),
         x = "Date",
         y = "Price (CAD)") +
    theme_minimal() +
    theme(legend.position = "right")
}
```

```{r}
# Save separate dataframes for cases and skins
cases_data <- all_items_data_clean %>% filter(Item_Type == "Case")
skins_data <- all_items_data_clean %>% filter(Item_Type == "Skin")

# Write a function to run the plots for each case in case_skins
case_plots <- lapply(names(case_skins), plot_case_and_skins)

```


